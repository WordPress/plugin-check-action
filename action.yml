name: 'WordPress Plugin Check'
description: 'Test your WordPress plugin with Plugin Check'
author: 'Pascal Birchler'
branding:
  color: 'blue'
  icon: 'trending-up'
inputs:
  repo-token:
    description: 'The GITHUB_TOKEN secret'
    required: false
    default: ${{ github.token }}
  build-dir:
    description: 'Build directory'
    required: false
    default: './'
  checks:
    description: 'Only run specific checks'
    required: false
    default: ''
  exclude-checks:
    description: 'Checks to exclude'
    required: false
    default: ''
  categories:
    description: 'Limit checks to specific categories'
    required: false
    default: ''
  exclude-files:
    description: 'Exclude certain files from checks'
    required: false
    default: ''
  exclude-directories:
    description: 'Exclude certain directories from checks'
    required: false
    default: ''
  ignore-codes:
    description: 'Error codes to ignore'
    required: false
    default: ''
  ignore-warnings:
    description: 'Ignore warnings'
    required: false
    default: 'false'
  ignore-errors:
    description: 'Ignore errors'
    required: false
    default: 'false'
  include-experimental:
    description: 'Include experimental checks'
    required: false
    default: 'false'
  wp-version:
    description: 'WordPress version to use'
    required: false
    default: 'latest'
  severity:
    description: 'Severity level'
    required: false
    default: ''
  error-severity:
    description: 'Error severity level'
    required: false
    default: ''
  warning-severity:
    description: 'Warning severity level'
    required: false
    default: ''
  include-low-severity-errors:
    description: 'Include errors with lower severity than the threshold as other type.'
    required: false
    default: ''
  include-low-severity-warnings:
    description: 'Include warnings with lower severity than the threshold as other type.'
    required: false
    default: ''
  slug:
    description: 'Slug to override the default'
    required: false
    default: ''
  strict:
    description: 'Treat everything as an error'
    required: false
    default: 'false'
runs:
  using: "composite"
  steps:
    - name: Set up Node
      uses: actions/setup-node@1d0ff469b7ec7b3cb9d8673fde0c81c44821de2a
      with:
        node-version: '20'

    - name: Set PLUGIN_DIR
      run: |
        PLUGIN_DIR=$(realpath "$BUILD_DIR")
        echo "PLUGIN_DIR=$PLUGIN_DIR" >> "$GITHUB_ENV"
        
        PLUGIN_SLUG=$(basename $PLUGIN_DIR)
        echo "PLUGIN_SLUG=$PLUGIN_SLUG" >> "$GITHUB_ENV"
      shell: bash
      env:
        BUILD_DIR: ${{ inputs.build-dir }}

    - name: Setup wp-env
      run: |
        touch .wp-env.json
        > .wp-env.json
        echo "{ \"core\": $WP_VERSION, \"port\": 8880, \"testsPort\": 8881, \"plugins\": [ \"https://downloads.wordpress.org/plugin/plugin-check.latest-stable.zip\" ], \"mappings\": { \"wp-content/plugins/$PLUGIN_SLUG\": \"$PLUGIN_DIR\" } }" >> .wp-env.json

        npm -g --no-fund i @wordpress/env
        wp-env start --update
      shell: bash
      env:
        WP_VERSION: ${{ inputs.wp-version == 'trunk' && '"WordPress/WordPress#master"' || 'null' }}

    - name: Run Plugin Check
      run: |
        CHECKS="${CHECKS//$'\n'/,}"
        EXCLUDE_CHECKS="${EXCLUDE_CHECKS//$'\n'/,}"
        CATEGORIES="${CATEGORIES//$'\n'/,}"
        EXCLUDE_FILES="${EXCLUDE_FILES//$'\n'/,}"
        EXCLUDE_DIRS="${EXCLUDE_DIRS//$'\n'/,}"
        IGNORE_CODES="${IGNORE_CODES//$'\n'/,}"
        ADDITIONAL_ARGS="$CHECKS $EXCLUDE_CHECKS $CATEGORIES $IGNORE_CODES $IGNORE_WARNINGS $IGNORE_ERRORS $INCLUDE_EXPERIMENTAL $EXCLUDE_FILES $EXCLUDE_DIRS $SEVERITY $ERROR_SEVERITY $WARNING_SEVERITY $INCLUDE_LOW_SEVERITY_ERRORS $INCLUDE_LOW_SEVERITY_WARNINGS $SLUG"

        echo "::group::Debugging information"
        wp-env run cli wp cli info
        wp-env run cli wp plugin list
        wp-env run cli wp plugin list-checks
        wp-env run cli wp plugin list-check-categories
        echo "::endgroup::"

        echo "::group::Install dependencies"

        # List all dependencies
        wp-env run cli wp plugin get $PLUGIN_SLUG --field=requires_plugins
        DEPENDENCIES=$(wp-env run cli wp plugin get $PLUGIN_SLUG --field=requires_plugins | tr ',' ' ')
        
        if [ -z "$DEPENDENCIES" ]; then
          echo "Plugin has no dependencies"
        else
          echo "Installing plugin dependencies: $DEPENDENCIES"
          # Install all dependencies first.
          wp-env run cli wp plugin install --activate $DEPENDENCIES
        fi;
        
        echo "::endgroup::"

        wp-env run cli wp plugin activate $PLUGIN_SLUG

        # Run Plugin Check
        wp-env run cli wp plugin check $PLUGIN_SLUG --format=json $ADDITIONAL_ARGS --require=./wp-content/plugins/plugin-check/cli.php > ${{ runner.temp }}/plugin-check-results.txt
      shell: bash
      env:
        CHECKS: ${{ inputs.checks && format('--checks={0}', inputs.checks) || '' }}
        EXCLUDE_CHECKS: ${{ inputs.exclude-checks && format('--exclude-checks={0}', inputs.exclude-checks) || '' }}
        CATEGORIES: ${{ inputs.categories && format('--categories={0}', inputs.categories) || '' }}
        EXCLUDE_FILES: ${{ inputs.exclude-files && format('--exclude-files={0}', inputs.exclude-files) || '' }}
        EXCLUDE_DIRS: ${{ inputs.exclude-directories && format('--exclude-directories={0}', inputs.exclude-directories) || '' }}
        IGNORE_CODES: ${{ inputs.ignore-codes && format('--ignore-codes={0}', inputs.ignore-codes) || '' }}
        IGNORE_WARNINGS: ${{ inputs.ignore-warnings == 'true' && '--ignore-warnings' || '' }}
        IGNORE_ERRORS: ${{ inputs.ignore-errors == 'true' && '--ignore-errors' || '' }}
        INCLUDE_EXPERIMENTAL: ${{ inputs.include-experimental == 'true' && '--include-experimental' || '' }}
        SEVERITY: ${{ inputs.severity && format('--severity={0}', inputs.severity) || '' }}
        ERROR_SEVERITY: ${{ inputs.error-severity && format('--error-severity={0}', inputs.error-severity) || '' }}
        WARNING_SEVERITY: ${{ inputs.warning-severity && format('--warning-severity={0}', inputs.warning-severity) || '' }}
        INCLUDE_LOW_SEVERITY_ERRORS: ${{ inputs.include-low-severity-errors == 'true' && '--include-low-severity-errors' || '' }}
        INCLUDE_LOW_SEVERITY_WARNINGS: ${{ inputs.include-low-severity-warnings == 'true' && '--include-low-severity-warnings' || '' }}
        SLUG: ${{ inputs.slug && format('--slug={0}', inputs.slug) || '' }}

    - name: Process results
      run: |
        node ${{ github.action_path }}/dist/index.js ${{ runner.temp }}/plugin-check-results.txt
      shell: bash
      env:
        INPUT_REPO_TOKEN: ${{ inputs.repo-token }}
        STRICT: ${{ inputs.strict }}
